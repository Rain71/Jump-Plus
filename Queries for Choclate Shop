-- 1. Querey Top Selling Chocolate

SELECT `Chocolate Table`.`Name` AS 'Chocolate_Name', SUM(`Orders Table`.`Quantity_Ordered`) AS 'Total_Quantity_Sold'
FROM `Chocolate Table`
JOIN `Orders Table` ON `Chocolate Table`.`Chocolate_ID` = `Orders Table`.`Chocolate_ID`
GROUP BY  `Chocolate Table`.`Name`
ORDER BY 'Total_Quantity_Sold' DESC;

-- 2. Querey Top Selling Customer

SELECT `Customer Table`.`Customer_ID`, 
		CONCAT(`Customer Table`.`First_Name`, ' ', `Customer Table`.`Last_Name`) AS 'Customer_Name', 
		SUM(`Orders Table`.`Total_Price_Sold`) AS 'Total_Spent'
FROM `Customer Table` 
JOIN `Orders Table` ON `Customer Table`.`Customer_ID` = `Orders Table`.`Customer_ID`
GROUP BY `Customer Table`.`Customer_ID`, 'Customer_Name'
ORDER BY 'Total_Spent' DESC;

-- 3.Query to Analyze Purchase Trends Over Time:

SELECT DATE_FORMAT(`Orders Table`.`Order_Date`, '2023-05') AS 'Order_Month', 
		SUM(`Orders Table`.`Quantity_Ordered`) AS 'Total_Quantity_Ordered'
FROM `Orders Table`
GROUP BY 'Order_Month'
ORDER BY 'Order_Month';

-- 4.Query to Identify Repeat Customers:

SELECT `Customer Table`.`Customer_ID`, 
		CONCAT(`Customer Table`.`First_Name`, ' ', `Customer Table`.`Last_Name`) AS 'Customer_Name', 
		COUNT(`Orders Table`.`Order_ID`) AS 'Total_Orders'
FROM `Customer Table` 
JOIN `Orders Table` ON `Customer Table`.`Customer_ID` = `Orders Table`.`Customer_ID`
GROUP BY `Customer Table`.`Customer_ID`, 'Customer_Name'
HAVING 'Total_Orders' > 1
ORDER BY 'Total_Orders' DESC;


-- 5.Query to Calculate Average Order Value:

SELECT AVG(`Orders Table`.`Total_Price_Sold`) AS 'Average_Order_Value'
FROM `Orders Table`;

-- 6.Query to Analyze Trends Over Time:

SELECT DATE_FORMAT(`Orders Table`.`Order_Date`, '2023-05') AS 'Order_Month', 
		SUM(`Orders Table`.`Quantity_Ordered`) AS 'Total_Quantity_Ordered'
FROM `Orders Table`
GROUP BY 'Order_Month'
ORDER BY 'Order_Month';

-- 7.Query to Analyze Chocolate with Low Inventory:

SELECT `Chocolate_ID`, `Name`, `Quantity_Available`
FROM `Chocolate Table` 
WHERE `Quantity_Available` < '10';

-- 8.Query to Get Customers With Highest Order Amounts:

SELECT `Customer_ID`, SUM(`Total_Price_Sold`) AS 'Total_Amount_Spent'
FROM `Orders Table`
GROUP BY `Customer_ID`
ORDER BY 'Total_Amount_Spent' DESC
LIMIT 1;

-- 9.Query to Identify Repeating Customers Query:

SELECT `Customer Table`.`Customer_ID`, 
		CONCAT(`Customer Table`.`First_Name`, ' ', `Customer Table`.`Last_Name`) AS 'Customer_Name', 
		COUNT(`Orders Table`.`Order_ID`) AS 'Total_Orders'
FROM `Customer Table` 
JOIN `Orders Table` ON `Customer Table`.`Customer_ID` = `Orders Table`.`Customer_ID`
GROUP BY `Customer Table`.`Customer_ID`, 'Customer_Name'
HAVING 'Total_Orders' > 1
ORDER BY 'Total_Orders' DESC;

-- 10.Total Revenue Generated Over A Specific Period Query

SELECT SUM(`Total_Price_Sold`) AS 'Total_Revenue'
FROM `Orders Table`
WHERE `Order_Date` BETWEEN '2023-02-09' AND '2023-10-09';
